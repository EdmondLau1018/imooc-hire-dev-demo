spring:
  application:
    name: gateway-service
  # ip 限流校验 引入 redis
  redis:
    host: 192.168.32.100
    port: 6379
    database: 0
    password: 1018
  cloud:
    # 开启基于 nacos 规则的客户端负载均衡 建议在网关和所有微服务中都添加这段配置
    loadbalancer:
      nacos:
        enabled: true
    # nacos 相关配置
    nacos:
      discovery:
        server-addr: 192.168.32.100:8848
    # gateway 网关配置
    gateway:
      discovery:
        locator:
          enabled: true   # 开启动态路由 允许通过注册中心 服务名称获取名称和节点
      routes:  # 网关路由配置
        - id: userRoute
          uri: lb://user-service   # 通过负载均衡寻找当前服务（在注册中心通过服务名称找到地址）
          predicates:     # 断言：通过网络请求的路径判断请求转发的目标服务
            - Path=/u/**,/admininfo/**    # 注意这里写的是 等于号 不是冒号
        - id: companyRoute
          uri: lb://company-service
          predicates:
            - Path=/c/**,/company/**
        - id: authRoute
          uri: lb://auth-service
          predicates:
            - Path=/a/**,/passport/**,/saas/**,/admin/**
        - id: resourceRoute
          uri: lb://resource-service
          predicates:
            - Path=/r/**,/industry/**,/dataDict/**,/sys/**
        - id: workRoute
          uri: lb://work-service
          predicates:
            - Path=/resume/**,/job/**,/reoprt/**
        - id: fileRoute
          uri: lb://file-service
          predicates:
            - Path=/f/**,/static/**,/file/**,/speech/**
      #  网关跨域配置 允许所有 域名的请求调用当前服务 并且允许添加headers
      globalcors:
        cors-configurations:
          '[/**]':
            allowedOriginPatterns: "*"
            allowedHeaders: "*"
            allowedMethods: "*"
            allowCredentials: true

server:
  port: 8000
  tomcat:
    uri-encoding: UTF-8
    max-swallow-size: -1


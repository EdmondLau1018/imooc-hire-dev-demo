spring:
  application:
    name: work-service
  banner:
    location: classpath:banner/banner.txt
  cloud:
    nacos:
      discovery:
        server-addr: 192.168.32.100:8848
  #  数据源配置
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://192.168.32.100:3306/imooc_hire_dev?useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
    username: root
    password: 1018
    type: com.zaxxer.hikari.HikariDataSource
    hikari:
      connection-timeout: 30000            # 等待连接池分配连接的最大时间（毫秒），超过这个时长还没有可用的连接，则会抛出SQLException
      minimum-idle: 5                      # 最小连接数
      maximum-pool-size: 20                # 最大连接数
      auto-commit: true                    # 自动提交
      idle-timeout: 600000                 # 连接超时的最大时长（毫秒），超时则会被释放（retired）
      pool-name: DataSourceHikariCP        # 连接池的名字
      max-lifetime: 18000000               # 连接池的最大生命时长（毫秒），超时则会被释放（retired）
      connection-test-query: SELECT 1
  redis:
    host: 192.168.32.100
    port: 6379
    database: 0
    password: 1018
  rabbitmq:
    host: 192.168.32.100
    port: 5672
    virtual-host: /
    username: imooc
    password: ENC(lsfCPe1pNl8A+ady3fqXYg==)
    # 消费者信息确认模式修改为手动
    listener:
      simple:
        acknowledge-mode: manual
# mongodb 相关配置信息
  data:
    mongodb:
      uri: mongodb://admin:imooc@192.168.32.100:27017
      database: imooc_hire_dev
#  ES 连接配置
  elasticsearch:
    uris: http://192.168.32.100:9200
# 服务器应用配置
server:
  port: 3001
  tomcat:
    uri-encoding: UTF-8
    # 这个配置设置 tomcat 服务器上传文件的时候吞吐量校验 默认超过 2M 的文件不会被捕获 -1 代表不校验文件大小
    max-swallow-size: -1

# 配置mybatis-plus 信息
mybatis-plus:
  configuration:
    # mybatis plus 日志打印配置信息
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  mapper-locations: classpath*:/mapper/*.xml
  global-config:
    # 取消项目启动加载 banner
    banner: false
    db-config:
      # 项目生成的主键策略 （雪花算法）
      id-type: assign_id
      update-strategy: not_empty

pagehelper:
  support-methods-arguments: true

# 配置 seata 分布式事务相关信息
seata:
  enabled: true
  # 事务组的名称 这个是可以自定义的
  tx-service-group: imooc_tx_group
  service:
    vgroup-mapping:
      imooc_tx_group: SEATA_GROUP
    grouplist:
      # 配置 seata 所在事务组服务端 ip 地址
      SEATA_GROUP: 192.168.32.100:8091
  config:
    nacos:
      server-addr: 192.168.32.100:8848
      username: nacos
      password: nacos
  registry:
    nacos:
      server-addr: 192.168.32.100:8848
      username: nacos
      password: nacos

#  配置 jasypt 加密信息
jasypt:
  encryptor:
    algorithm: PBEWithMD5AndDES
    password: Sharn